<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\bin\Debug\DroneFlightPlanner.exe">
   <Modules>
    <Module Name="droneflightplanner.exe">
     <Namespaces>
      <Namespace Name="MissionPlanner">
       <Types>
        <Type Name="_Drone_s_Flight_PlannerDataSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet1' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet1'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet1+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet1.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet1.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet1.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet1+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet1.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet10" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet10' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet10'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet10+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet10.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet10.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet10.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet10+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet10.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet2'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+DroneDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.DroneDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet2.DroneRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet2.DroneDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+DroneRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.DroneRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet2.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet2.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet2.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet2.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet2+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet2.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet3' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet3'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet3+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet3.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet3.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet3.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet3+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet3.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet4" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet4' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet4'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet4+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet4.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet4.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet4.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet4+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet4.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet5" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet5' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet5'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet5+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet5.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet5.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet5.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet5+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet5.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet6" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet6' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet6'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet6+TransactDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet6.TransactDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet6.TransactRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet6.TransactDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet6+TransactRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet6.TransactRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet7" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet7' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet7'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet7+MaintainanceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet7.MaintainanceDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet7.MaintainanceRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet7.MaintainanceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet7+MaintainanceRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet7.MaintainanceRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet8" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet8' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet8'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet8+MaintainanceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet8.MaintainanceDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet8.MaintainanceRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet8.MaintainanceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet8+MaintainanceRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet8.MaintainanceRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet9" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet9' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet9'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet9+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet9.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;_Drone_s_Flight_PlannerDataSet9.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type '_Drone_s_Flight_PlannerDataSet9.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="_Drone_s_Flight_PlannerDataSet9+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'_Drone_s_Flight_PlannerDataSet9.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="action_name" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'action_name' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'action_name'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="action_name+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'action_name.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;action_name.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'action_name.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="action_name+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'action_name.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ActivitySchedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ActivitySchedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ActivitySchedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ActivitySchedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ActivitySchedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;ActivitySchedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ActivitySchedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ActivitySchedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ActivitySchedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DEVICE_LIST" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DEVICE_LIST' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DEVICE_LIST'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DEVICE_LIST+DeviceListDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DEVICE_LIST.DeviceListDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DEVICE_LIST.DeviceListRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DEVICE_LIST.DeviceListDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DEVICE_LIST+DeviceListRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DEVICE_LIST.DeviceListRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Drone'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone+DroneDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone.DroneDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;Drone.DroneRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Drone.DroneDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone+DroneRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone.DroneRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone1' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Drone1'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone1+DroneDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone1.DroneDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;Drone1.DroneRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Drone1.DroneDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Drone1+DroneRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Drone1.DroneRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet+DroneDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet.DroneDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet.DroneRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet.DroneDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet+DroneRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet.DroneRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet1' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet1'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet1+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet1.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet1.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet1.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet1+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet1.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet2' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet2'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet2+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet2.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet2.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet2.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet2+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet2.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet3' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet3'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet3+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet3.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet3.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet3.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet3+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet3.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet4" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet4' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet4'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet4+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet4.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet4.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet4.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet4+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet4.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet5" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet5' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet5'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet5+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet5.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet5.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet5.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet5+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet5.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet6" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet6' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet6'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet6+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet6.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet6.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet6.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet6+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet6.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet7" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet7' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet7'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet7+TransactDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet7.TransactDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;DroneFlightPlannerDataSet7.TransactRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'DroneFlightPlannerDataSet7.TransactDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DroneFlightPlannerDataSet7+TransactRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'DroneFlightPlannerDataSet7.TransactRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="F_Schedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'F_Schedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'F_Schedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="F_Schedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'F_Schedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;F_Schedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'F_Schedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="F_Schedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'F_Schedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FArm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FArm' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FArm'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FArm+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FArm.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FArm.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FArm.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FArm+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FArm.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="farm1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'farm1' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'farm1'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="farm1+FarmDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'farm1.FarmDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;farm1.FarmRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'farm1.FarmDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="farm1+FarmRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'farm1.FarmRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightLog' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightLog'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightLog+FlightLogDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightLog.FlightLogDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FlightLog.FlightLogRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightLog.FlightLogDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightLog+FlightLogRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightLog.FlightLogRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_flightschedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_flightschedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightplanner_flightschedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_flightschedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_flightschedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;flightplanner_flightschedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightplanner_flightschedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_flightschedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_flightschedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_FS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_FS' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightplanner_FS'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_FS+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_FS.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;flightplanner_FS.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightplanner_FS.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightplanner_FS+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightplanner_FS.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightSchedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightSchedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightSchedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightSchedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightSchedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;flightSchedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'flightSchedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FlightSchedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="flightSchedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'flightSchedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FlightSchedule.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule1' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule1'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule1+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule1.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FlightSchedule1.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule1.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule1+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule1.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule2' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule2'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule2+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule2.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;FlightSchedule2.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'FlightSchedule2.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FlightSchedule2+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'FlightSchedule2.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GdalConfiguration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="GdalConfiguration.cs" Line="61">'GdalConfiguration.GdalConfiguration()' creates an exception of type 'InvalidOperationException'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GMapMarkerADSBPlane" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerADSBPlane'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerADSBPlane with the following signature: 'protected GMapMarkerADSBPlane(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerAntennaTracker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerAntennaTracker'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerAntennaTracker with the following signature: 'protected GMapMarkerAntennaTracker(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerBoat" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerBoat'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerBoat with the following signature: 'protected GMapMarkerBoat(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerHeli" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerHeli'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerHeli with the following signature: 'protected GMapMarkerHeli(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerPlane" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerPlane'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerPlane with the following signature: 'protected GMapMarkerPlane(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerQuad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerQuad'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerQuad with the following signature: 'protected GMapMarkerQuad(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerRect" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerRect'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerRect with the following signature: 'protected GMapMarkerRect(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerRover" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerRover'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerRover with the following signature: 'protected GMapMarkerRover(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerSingle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerSingle'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerSingle with the following signature: 'protected GMapMarkerSingle(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerSub" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerSub'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerSub with the following signature: 'protected GMapMarkerSub(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerWP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerWP'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerWP with the following signature: 'protected GMapMarkerWP(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Grid_farmAction" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Grid_farmAction' because it creates members of the following IDisposable types: 'ToolStripMenuItem'. If 'Grid_farmAction' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GridFlightPattern" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'GridFlightPattern' because it creates members of the following IDisposable types: 'ToolStripMenuItem'. If 'GridFlightPattern' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GridPlugin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'GridPlugin' because it creates members of the following IDisposable types: 'ToolStripMenuItem'. If 'GridPlugin' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GridSelectFarm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'GridSelectFarm' because it creates members of the following IDisposable types: 'ToolStripMenuItem'. If 'GridSelectFarm' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GridUI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="GMapMarkerOverlap" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Grid" File="GridUI.Designer.cs" Line="15">'GridUI' contains field 'GridUI.GMapMarkerOverlap' that is of IDisposable type: 'GMapMarkerOverlapCount'. Change the Dispose method on 'GridUI' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="kmlpolygonsoverlay" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Grid" File="GridUI.Designer.cs" Line="15">'GridUI' contains field 'GridUI.kmlpolygonsoverlay' that is of IDisposable type: 'GMapOverlay'. Change the Dispose method on 'GridUI' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="marker" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Grid" File="GridUI.Designer.cs" Line="15">'GridUI' contains field 'GridUI.marker' that is of IDisposable type: 'GMapMarker'. Change the Dispose method on 'GridUI' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="routesOverlay" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Grid" File="GridUI.Designer.cs" Line="15">'GridUI' contains field 'GridUI.routesOverlay' that is of IDisposable type: 'GMapOverlay'. Change the Dispose method on 'GridUI' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GridUIFarm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="GMapMarkerOverlap" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Grid" File="GridUIFarm.Designer.cs" Line="15">'GridUIFarm' contains field 'GridUIFarm.GMapMarkerOverlap' that is of IDisposable type: 'GMapMarkerOverlapCount'. Change the Dispose method on 'GridUIFarm' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAintain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'MAintain' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'MAintain'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MAintain+MaintainanceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'MAintain.MaintainanceDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;MAintain.MaintainanceRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'MAintain.MaintainanceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MAintain+MaintainanceRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'MAintain.MaintainanceRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="maintainace" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'maintainace' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'maintainace'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="maintainace+MaintainanceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'maintainace.MaintainanceDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;maintainace.MaintainanceRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'maintainace.MaintainanceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="maintainace+MaintainanceRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'maintainace.MaintainanceRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MainV2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_developer.Designer.cs" Line="16">'MainV2' contains field 'MainV2.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'MainV2' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="SerialThreadrunner" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_developer.Designer.cs" Line="16">'MainV2' contains field 'MainV2.SerialThreadrunner' that is of IDisposable type: 'ManualResetEvent'. Change the Dispose method on 'MainV2' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doConnect(MissionPlanner.MAVLinkInterface,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_developer.cs" Line="1430">'MainV2.doConnect(MAVLinkInterface, string, string)' locks on a reference of type 'MainV2'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialReader()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_developer.cs" Line="2565">Object 'port' can be disposed more than once in method 'MainV2.SerialReader()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2565</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'MainV2.WMDeviceChangeEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MainV2.WMDeviceChangeEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV2+NativeMethods" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindow(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'MainV2.NativeMethods.FindWindow(string, string)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szTitle' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3.Designer.cs" Line="16">'MainV3' contains field 'MainV3.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'MainV3' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="SerialThreadrunner" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3.Designer.cs" Line="16">'MainV3' contains field 'MainV3.SerialThreadrunner' that is of IDisposable type: 'ManualResetEvent'. Change the Dispose method on 'MainV3' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doConnect(MissionPlanner.MAVLinkInterface,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3.cs" Line="1414">'MainV3.doConnect(MAVLinkInterface, string, string)' locks on a reference of type 'MainV3'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialReader()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3.cs" Line="2549">Object 'port' can be disposed more than once in method 'MainV3.SerialReader()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2549</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'MainV3.WMDeviceChangeEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MainV3.WMDeviceChangeEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3_admin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_admin.Designer.cs" Line="16">'MainV3_admin' contains field 'MainV3_admin.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'MainV3_admin' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="SerialThreadrunner" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_admin.Designer.cs" Line="16">'MainV3_admin' contains field 'MainV3_admin.SerialThreadrunner' that is of IDisposable type: 'ManualResetEvent'. Change the Dispose method on 'MainV3_admin' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doConnect(MissionPlanner.MAVLinkInterface,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_admin.cs" Line="1419">'MainV3_admin.doConnect(MAVLinkInterface, string, string)' locks on a reference of type 'MainV3_admin'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialReader()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_admin.cs" Line="2554">Object 'port' can be disposed more than once in method 'MainV3_admin.SerialReader()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2554</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'MainV3_admin.WMDeviceChangeEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MainV3_admin.WMDeviceChangeEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3_admin+NativeMethods" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindow(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'MainV3_admin.NativeMethods.FindWindow(string, string)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szTitle' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3_pilot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_pilot.Designer.cs" Line="16">'MainV3_pilot' contains field 'MainV3_pilot.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'MainV3_pilot' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="SerialThreadrunner" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_pilot.Designer.cs" Line="16">'MainV3_pilot' contains field 'MainV3_pilot.SerialThreadrunner' that is of IDisposable type: 'ManualResetEvent'. Change the Dispose method on 'MainV3_pilot' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doConnect(MissionPlanner.MAVLinkInterface,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_pilot.cs" Line="1424">'MainV3_pilot.doConnect(MAVLinkInterface, string, string)' locks on a reference of type 'MainV3_pilot'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialReader()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="MainV3_pilot.cs" Line="2559">Object 'port' can be disposed more than once in method 'MainV3_pilot.SerialReader()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2559</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'MainV3_pilot.WMDeviceChangeEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MainV3_pilot.WMDeviceChangeEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3_pilot+NativeMethods" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindow(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'MainV3_pilot.NativeMethods.FindWindow(string, string)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szTitle' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainV3+NativeMethods" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindow(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'MainV3.NativeMethods.FindWindow(string, string)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'szTitle' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAVLinkInterface" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'MAVLinkInterface' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVLinkInterface.cs" Line="4951">Modify 'MAVLinkInterface.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#generatePacket(System.Int32,System.Object,System.Int32,System.Int32,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVLinkInterface.cs" Line="873">'MAVLinkInterface.generatePacket(int, object, int, int, bool, bool)' locks on a reference of type 'BufferedStream'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getParamListBG()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVLinkInterface.cs" Line="1236">'MAVLinkInterface.getParamListBG()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readPacket()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVLinkInterface.cs" Line="3859">'MAVLinkInterface.readPacket()' locks on a reference of type 'BufferedStream'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Progress" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAVState" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'MAVState' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GMapMarkerOverlapCount" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVState.cs" Line="157">'MAVState' contains field 'MAVState.GMapMarkerOverlapCount' that is of IDisposable type: 'GMapMarkerOverlapCount'. Change the Dispose method on 'MAVState' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVState.cs" Line="157">Modify 'MAVState.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OSDVideo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DirectShowLib.ISampleGrabberCB.BufferCB(System.Double,System.IntPtr,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="OSDVideo.cs" Line="731">Make 'OSDVideo' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'ISampleGrabberCB.BufferCB(double, IntPtr, int)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DirectShowLib.ISampleGrabberCB.SampleCB(System.Double,DirectShowLib.IMediaSample)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="OSDVideo.cs" Line="703">Make 'OSDVideo' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'ISampleGrabberCB.SampleCB(double, IMediaSample)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="image" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="OSDVideo.Designer.cs" Line="15">'OSDVideo' contains field 'OSDVideo.image' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'OSDVideo' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="m_PictureReady" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="OSDVideo.Designer.cs" Line="15">'OSDVideo' contains field 'OSDVideo.m_PictureReady' that is of IDisposable type: 'ManualResetEvent'. Change the Dispose method on 'OSDVideo' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="trans" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="OSDVideo.Designer.cs" Line="15">'OSDVideo' contains field 'OSDVideo.trans' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'OSDVideo' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ParamCompare" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dtlvcallback" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ParamCompare.dtlvcallbackHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ParamCompare.dtlvcallbackHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="part" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'part' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'part'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="part+DeviceListDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'part.DeviceListDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;part.DeviceListRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'part.DeviceListDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="part+DeviceListRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'part.DeviceListRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PartDroneNotify" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'PartDroneNotify' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'PartDroneNotify'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PartDroneNotify+DeviceListDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'PartDroneNotify.DeviceListDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;PartDroneNotify.DeviceListRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'PartDroneNotify.DeviceListDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PartDroneNotify+DeviceListRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'PartDroneNotify.DeviceListRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="preFlightScheduleEntities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'preFlightScheduleEntities' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DbContext'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Program" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetConsoleWindow()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Program.GetConsoleWindow()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowWindow(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Program.ShowWindow(IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Report_preflightschedule_dataset" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Report_preflightschedule_dataset' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Report_preflightschedule_dataset'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Report_preflightschedule_dataset+Report_preflightfcheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Report_preflightschedule_dataset.Report_preflightfcheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;Report_preflightschedule_dataset.Report_preflightfcheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Report_preflightschedule_dataset.Report_preflightfcheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Report_preflightschedule_dataset+Report_preflightfcheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Report_preflightschedule_dataset.Report_preflightfcheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_selected" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_selected' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'role_selected'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_selected+UserLoginDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_selected.UserLoginDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;role_selected.UserLoginRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'role_selected.UserLoginDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_selected+UserLoginRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_selected.UserLoginRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_unselected" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_unselected' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'role_unselected'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_unselected+UserLoginDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_unselected.UserLoginDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;role_unselected.UserLoginRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'role_unselected.UserLoginDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="role_unselected+UserLoginRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'role_unselected.UserLoginRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'schedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Schedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Schedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Schedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule_act" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule_act' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'schedule_act'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule_act+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule_act.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;schedule_act.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'schedule_act.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule_act+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule_act.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Schedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Schedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;Schedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Schedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Schedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Schedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule+MaintainanceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule.MaintainanceDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;schedule.MaintainanceRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'schedule.MaintainanceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule+MaintainanceRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule.MaintainanceRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;schedule.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'schedule.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Schedule+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Schedule.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;Schedule.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'Schedule.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="schedule+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'schedule.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Schedule+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'Schedule.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="scheduleAct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'scheduleAct' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'scheduleAct'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScheduleAct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ScheduleAct' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ScheduleAct'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="scheduleAct+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'scheduleAct.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;scheduleAct.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'scheduleAct.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScheduleAct+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ScheduleAct.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;ScheduleAct.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ScheduleAct.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="scheduleAct+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'scheduleAct.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScheduleAct+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ScheduleAct.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="scheduleAct+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'scheduleAct.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;scheduleAct.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'scheduleAct.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScheduleAct+schedule_actionDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ScheduleAct.schedule_actionDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;ScheduleAct.schedule_actionRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ScheduleAct.schedule_actionDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="scheduleAct+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'scheduleAct.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScheduleAct+schedule_actionRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ScheduleAct.schedule_actionRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerialInjectGPS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="SerialInjectGPS.cs" Line="202">Modify 'SerialInjectGPS.~SerialInjectGPS()' so that it calls Dispose(false) and then returns.</Issue>
             <Issue Name="FinalizeOverride" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="SerialInjectGPS.cs" Line="202">Remove the finalizer from type 'SerialInjectGPS', override Dispose(bool disposing), and put the finalization logic in the code path where 'disposing' is false.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="tableSchedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'tableSchedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'tableSchedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="tableSchedule+FlightScheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'tableSchedule.FlightScheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;tableSchedule.FlightScheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'tableSchedule.FlightScheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="tableSchedule+FlightScheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'tableSchedule.FlightScheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Validation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Goto_main_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="Validation.cs" Line="98">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Validation.Goto_main_Click(object, EventArgs)' could contain the following variables 'this.txtUsername.Text', 'this.txtPassword.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="View_flightschedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'View_flightschedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataSet'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'View_flightschedule'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="View_flightschedule+View_flightscheduleDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'View_flightschedule.View_flightscheduleDataTable' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'TypedTableBase&lt;View_flightschedule.View_flightscheduleRow&gt;', 'DataTable'</Issue>
          </Message>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'View_flightschedule.View_flightscheduleDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="View_flightschedule+View_flightscheduleRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'View_flightschedule.View_flightscheduleRow' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DataRow'</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Comms">
       <Types>
        <Type Name="CommsSerialScan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#doread(System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Comms" File="CommsSerialScan.cs" Line="75">Object 'port' can be disposed more than once in method 'CommsSerialScan.doread(object)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 75, 100, 127</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAVLinkSerialPort" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BaseStream" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BaseStream()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVLinkSerialPort.cs" Line="259">'MAVLinkSerialPort.BaseStream.get()' creates an exception of type 'NotImplementedException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Controls">
       <Types>
        <Type Name="DistanceBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="brushbar" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="DistanceBar.Designer.cs" Line="15">'DistanceBar' contains field 'DistanceBar.brushbar' that is of IDisposable type: 'Brush'. Change the Dispose method on 'DistanceBar' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="buffer" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="DistanceBar.Designer.cs" Line="15">'DistanceBar' contains field 'DistanceBar.buffer' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'DistanceBar' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MavlinkCheckBoxBitMask" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ValueChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventValueChanged' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'EventValueChanged'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MavlinkNumericUpDown" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MavlinkNumericUpDown_ValueChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="MavlinkNumericUpDown.cs" Line="160">'MavlinkNumericUpDown.MavlinkNumericUpDown_ValueChanged(object, EventArgs)' locks on a reference of type 'Timer'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="MavlinkNumericUpDown.cs" Line="179">'MavlinkNumericUpDown.Timer_Tick(object, EventArgs)' locks on a reference of type 'Timer'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SITL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="homemarker" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="SITL.Designer.cs" Line="15">'SITL' contains field 'SITL.homemarker' that is of IDisposable type: 'GMapMarkerWP'. Change the Dispose method on 'SITL' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="markeroverlay" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="SITL.Designer.cs" Line="15">'SITL' contains field 'SITL.markeroverlay' that is of IDisposable type: 'GMapOverlay'. Change the Dispose method on 'SITL' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="SITL.cs" Line="83">Modify 'SITL.~SITL()' so that it calls Dispose(false) and then returns.</Issue>
             <Issue Name="FinalizeOverride" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls" File="SITL.cs" Line="83">Remove the finalizer from type 'SITL', override Dispose(bool disposing), and put the finalization logic in the code path where 'disposing' is false.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolStripConnectionControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'ToolStripConnectionControl' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ToolStripControlHost', 'ToolStripItem'</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Controls.PreFlight">
       <Types>
        <Type Name="CheckListItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_GetValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls\PreFlight" File="CheckListItem.cs" Line="118">'CheckListItem.GetValue.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetValueObject" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_GetValueObject()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls\PreFlight" File="CheckListItem.cs" Line="153">'CheckListItem.GetValueObject.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Controls\PreFlight" File="CheckListItem.cs" Line="161">'CheckListItem.GetValueObject.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.GCSViews">
       <Types>
        <Type Name="FlightData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#but_dflogtokml_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightData.cs" Line="3882">Object 'tr' can be disposed more than once in method 'FlightData.but_dflogtokml_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3882</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="center" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightData.cs" Line="137">'FlightData' contains field 'FlightData.center' that is of IDisposable type: 'GMapMarker'. Change the Dispose method on 'FlightData' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FlightPlanner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DG_farm_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="8185">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'FlightPlanner.DG_farm_CellContentClick(object, DataGridViewCellEventArgs)' could contain the following variables 'FlightPlanner.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.Designer.cs" Line="17">'FlightPlanner' contains field 'FlightPlanner.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'FlightPlanner' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="homeroute" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.Designer.cs" Line="17">'FlightPlanner' contains field 'FlightPlanner.homeroute' that is of IDisposable type: 'GMapRoute'. Change the Dispose method on 'FlightPlanner' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="route" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.Designer.cs" Line="17">'FlightPlanner' contains field 'FlightPlanner.route' that is of IDisposable type: 'GMapRoute'. Change the Dispose method on 'FlightPlanner' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doConnect(MissionPlanner.MAVLinkInterface,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7724">'FlightPlanner.doConnect(MAVLinkInterface, string, string)' locks on a reference of type 'FlightPlanner'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loadListData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="8208">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'FlightPlanner.loadListData()' could contain the following variables 'this.textBox_farmID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#menuTakeoff_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7526">Object 'sw' can be disposed more than once in method 'FlightPlanner.menuTakeoff_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 7526</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7417">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'FlightPlanner.menuTakeoff_Click(object, EventArgs)' could contain the following variables 'this.textBox_actID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7396">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'FlightPlanner.menuTakeoff_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7442">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'FlightPlanner.menuTakeoff_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7423">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'FlightPlanner.menuTakeoff_Click(object, EventArgs)' could contain the following variables 'this.textBox_farmID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="7475">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'FlightPlanner.menuTakeoff_Click(object, EventArgs)' could contain the following variables 'new string[39][1]', 'this.textBox_farmID.Text', 'this.farm_name', 'this.farm_host', 'this.farm_address', 'this.farm_road', 'this.farm_subDistrict', 'this.farm_district', 'this.farm_province', 'this.farm_postal', 'this.textBox_droneID.Text', 'this.drone_name', 'this.action_noT', 'this.action_nameT', 'this.material_nameT', 'this.action_capacityT', 'this.action_costT', 'this.distanceTotal', 'this.areaTotal'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panel10_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="FlightPlanner.cs" Line="8064">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'FlightPlanner.panel10_Paint(object, PaintEventArgs)' could contain the following variables 'FlightPlanner.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_after_flight" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#But_save_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_After_flight.cs" Line="31">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_after_flight.But_save_Click(object, EventArgs)' could contain the following variables 'this.textBox_cap.Text', 'this.textBox_startTime.Text', 'this.textBox_finishTime.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_farm_act" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_act.cs" Line="64">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_act.LoadList()' could contain the following variables 'this.id_farm', 'startDt', 'endDt'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_farm_act2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button_delete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_act2.cs" Line="89">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_act2.button_delete_Click(object, EventArgs)' could contain the following variables 'this.textBox_actID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panelFarm_Act_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_act2.cs" Line="64">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_act2.panelFarm_Act_Paint(object, PaintEventArgs)' could contain the following variables 'this.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_farm_role" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#loadSelected()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_role.cs" Line="94">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_role.loadSelected()' could contain the following variables 'Validation.validateUsername', 'this.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loadUnselected()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_role.cs" Line="68">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_role.loadUnselected()' could contain the following variables 'Validation.validateUsername', 'this.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_farm_Schedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#But_add_act_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="199">Object 'sw' can be disposed more than once in method 'Form_farm_Schedule.But_add_act_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 199</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="122">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Form_farm_Schedule.But_add_act_Click(object, EventArgs)' could contain the following variables 'this.cboDrone.SelectedValue'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="147">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.But_add_act_Click(object, EventArgs)' could contain the following variables 'this.id_farm', 'this.cboDrone.SelectedValue', 'this.textBox_cap.Text', 'this.textBox_cost.Text', 'datetime.ToString("yyyy-MM-dd")', 'this.textBox_startTime.Text', 'this.textBox_finishTime.Text', 'this.cboActivity.SelectedValue', 'this.cboActivity.Text', 'this.cboMaterial.SelectedValue', 'this.cboMaterial.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_delete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="212">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button_delete_Click(object, EventArgs)' could contain the following variables 'this.DG_Farm.SelectedRows[0].Cells["action_no"].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_edit_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="231">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Form_farm_Schedule.button_edit_Click(object, EventArgs)' could contain the following variables 'this.cboDrone.SelectedValue'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="261">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button_edit_Click(object, EventArgs)' could contain the following variables 'this.id_farm', 'this.cboDrone.SelectedValue', 'this.cboActivity.Text', 'this.cboMaterial.Text', 'this.textBox_cap.Text', 'this.textBox_cost.Text', 'Local9.ToShortDateString()', 'this.textBox_startTime.Text', 'this.textBox_finishTime.Text', 'this.cboActivity.SelectedValue', 'this.cboMaterial.SelectedValue', 'this.DG_Farm.SelectedRows[0].Cells["action_no"].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="442">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button2_Click(object, EventArgs)' could contain the following variables 'this.cboActivity.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="458">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button3_Click(object, EventArgs)' could contain the following variables 'this.cboMaterial.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button4_Click_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="471">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button4_Click_1(object, EventArgs)' could contain the following variables 'this.cboActivity.SelectedValue'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="485">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.button5_Click(object, EventArgs)' could contain the following variables 'this.cboMaterial.SelectedValue'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loadListData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_farm_Schedule.cs" Line="346">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_farm_Schedule.loadListData()' could contain the following variables 'this.id_farm'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_log" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#But_save_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_log.cs" Line="64">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_log.But_save_Click(object, EventArgs)' could contain the following variables 'this.comboBox1.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_log.cs" Line="68">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_log.But_save_Click(object, EventArgs)' could contain the following variables 'this.comboBox1.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_log.cs" Line="54">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_log.But_save_Click(object, EventArgs)' could contain the following variables 'this.textBox_logNo.Text', 'this.comboBox1.Text', 'this.file', 'this.textBox_patternMask.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form_main_Schedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button_delete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Form_main_Schedule.cs" Line="74">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Form_main_Schedule.button_delete_Click(object, EventArgs)' could contain the following variables 'this.textBox_actID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Menu_farm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BUT_add_farm_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="59">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_farm.BUT_add_farm_Click(object, EventArgs)' could contain the following variables 'this.textBox_farmName.Text', 'this.textBox_farmHost.Text', 'this.textBox1.Text', 'this.textBox2.Text', 'this.textBox3.Text', 'this.textBox4.Text', 'this.textBox5.Text', 'this.textBox6.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="83">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_farm.BUT_add_farm_Click(object, EventArgs)' could contain the following variables 'this.textBox_farmName.Text', 'this.textBox_farmHost.Text', 'this.textBox1.Text', 'this.textBox2.Text', 'this.textBox3.Text', 'this.textBox4.Text', 'this.textBox5.Text', 'this.textBox6.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="94">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_farm.BUT_add_farm_Click(object, EventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="135">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_farm.button1_Click(object, EventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="126">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_farm.button1_Click(object, EventArgs)' could contain the following variables 'this.DG_Farm.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="176">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_farm.button2_Click(object, EventArgs)' could contain the following variables 'this.textBox_farmName.Text', 'this.textBox_farmHost.Text', 'this.textBox1.Text', 'this.textBox2.Text', 'this.textBox3.Text', 'this.textBox4.Text', 'this.textBox5.Text', 'this.textBox6.Text', 'this.DG_Farm.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="193">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_farm.button2_Click(object, EventArgs)' could contain the following variables 'this.textBox_farmName.Text', 'this.textBox_farmHost.Text', 'this.textBox1.Text', 'this.textBox2.Text', 'this.textBox3.Text', 'this.textBox4.Text', 'this.textBox5.Text', 'this.textBox6.Text', 'this.DG_Farm.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="204">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_farm.button2_Click(object, EventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DG_Farm_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="250">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_farm.DG_Farm_Click(object, EventArgs)' could contain the following variables 'Validation.validateUsername', 'this.DG_Farm.CurrentRow.Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Menu_farm_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_farm.cs" Line="306">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_farm.Menu_farm_Load(object, EventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Menu_main2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_main2.Designer.cs" Line="15">'Menu_main2' contains field 'Menu_main2.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'Menu_main2' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panelFarm_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_main2.cs" Line="63">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_main2.panelFarm_Paint(object, PaintEventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panelFlightSchedule_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_main2.cs" Line="76">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_main2.panelFlightSchedule_Paint(object, PaintEventArgs)' could contain the following variables 'Validation.validateUsername'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Menu_maintenance" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BUT_add_drone_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="114">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_add_drone_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="150">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_add_drone_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="129">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_add_drone_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneName.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="164">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_add_drone_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneName.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BUT_addPart_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="466">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_addPart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="433">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_addPart_Click(object, EventArgs)' could contain the following variables 'this.textBox_partName.Text', 'this.textBox_partPosition.Text', 'Local9.ToString(format)', 'Local9.ToString(format)', 'Local9.ToString(format)', 'this.textBox_venName.Text', 'this.textBox_venAdd.Text', 'this.textBox_venPhone.Text', 'this.textBox_respon.Text', 'this.comboBox_alarm.Text', 'this.textBox_partPrice.Text', 'this.id_drone', 'Local9.ToString(format)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="449">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.BUT_addPart_Click(object, EventArgs)' could contain the following variables 'this.textBox_partName.Text', 'this.textBox_partPosition.Text', 'Local9.ToString(format)', 'Local9.ToString(format)', 'Local9.ToString(format)', 'this.textBox_venName.Text', 'this.textBox_venAdd.Text', 'this.textBox_venPhone.Text', 'this.textBox_respon.Text', 'this.comboBox_alarm.Text', 'this.textBox_partPrice.Text', 'this.id_drone', 'Local9.ToString(format)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="468">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.BUT_addPart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_deletePart_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="389">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_deletePart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="391">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button_deletePart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="365">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button_deletePart_Click(object, EventArgs)' could contain the following variables 'this.id_part'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_editPart_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="539">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_editPart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="507">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_editPart_Click(object, EventArgs)' could contain the following variables 'this.textBox_partName.Text', 'this.textBox_partPosition.Text', 'Local9.ToString(format)', 'Local9.ToString(format)', 'Local9.ToString(format)', 'this.textBox_venName.Text', 'this.textBox_venAdd.Text', 'this.textBox_venPhone.Text', 'this.textBox_respon.Text', 'this.comboBox_alarm.Text', 'this.textBox_partPrice.Text', 'this.id_drone', 'this.id_part'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="522">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_editPart_Click(object, EventArgs)' could contain the following variables 'this.textBox_partName.Text', 'this.textBox_partPosition.Text', 'Local9.ToString(format)', 'Local9.ToString(format)', 'Local9.ToString(format)', 'this.textBox_venName.Text', 'this.textBox_venAdd.Text', 'this.textBox_venPhone.Text', 'this.textBox_respon.Text', 'this.comboBox_alarm.Text', 'this.textBox_partPrice.Text', 'this.id_drone', 'this.id_part'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="541">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button_editPart_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_modify_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="267">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_modify_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneName.Text', 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="281">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.button_modify_Click(object, EventArgs)' could contain the following variables 'this.textBox_droneName.Text', 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="205">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button2_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="218">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button2_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="224">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.button2_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DG_Drone_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="614">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.DG_Drone_Click(object, EventArgs)' could contain the following variables 'this.DG_Drone.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="641">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.DG_Drone_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="643">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance.DG_Drone_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DG_Part_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.cs" Line="570">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance.DG_Part_Click(object, EventArgs)' could contain the following variables 'this.id_drone', 'this.DG_Part.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance.Designer.cs" Line="17">'Menu_maintenance' contains field 'Menu_maintenance.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'Menu_maintenance' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Menu_maintenance_part" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button_delete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="205">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance_part.button_delete_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="207">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_part.button_delete_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="197">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_part.button_delete_Click(object, EventArgs)' could contain the following variables 'this.textBox_partID.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_show_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="225">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance_part.button_show_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="227">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_part.button_show_Click(object, EventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.Designer.cs" Line="15">'Menu_maintenance_part' contains field 'Menu_maintenance_part.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'Menu_maintenance_part' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panelMaintenance_pre_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="106">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance_part.panelMaintenance_pre_Paint(object, PaintEventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_part.cs" Line="108">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_part.panelMaintenance_pre_Paint(object, PaintEventArgs)' could contain the following variables 'this.id_drone'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Menu_maintenance_pre" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BUT_add_drone_pre_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="75">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.BUT_add_drone_pre_Click(object, EventArgs)' could contain the following variables 'this.id_deviceID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="64">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.BUT_add_drone_pre_Click(object, EventArgs)' could contain the following variables 'this.id_deviceID', 'this.textBox_mainAct.Text', 'this.textBox_price.Text', 'this.textBox_venName.Text', 'this.textBox_venPhone.Text', 'this.textBox_venAdd.Text', 'this.textBox_time.Text', 'this.textBox_respond.Text', 'Local6.ToString(format)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_delete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="124">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.button_delete_Click(object, EventArgs)' could contain the following variables 'this.DG_Farm.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="136">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.button_delete_Click(object, EventArgs)' could contain the following variables 'this.id_deviceID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button_edit_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="109">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.button_edit_Click(object, EventArgs)' could contain the following variables 'this.id_deviceID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="97">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.button_edit_Click(object, EventArgs)' could contain the following variables 'this.id_deviceID', 'this.textBox_mainAct.Text', 'this.textBox_price.Text', 'this.textBox_venName.Text', 'this.textBox_venPhone.Text', 'this.textBox_venAdd.Text', 'this.textBox_time.Text', 'this.textBox_respond.Text', 'Local6.ToString(format)', 'this.DG_Farm.SelectedRows[0].Cells[0].Value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DG_Farm_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="154">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'Menu_maintenance_pre.DG_Farm_Click(object, EventArgs)' could contain the following variables 'this.id_drone', 'this.id_deviceID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MyView" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.Designer.cs" Line="15">'Menu_maintenance_pre' contains field 'Menu_maintenance_pre.MyView' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'Menu_maintenance_pre' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#panelMaintenance_pre_Paint(System.Object,System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews" File="Menu_maintenance_pre.cs" Line="45">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Menu_maintenance_pre.panelMaintenance_pre_Paint(object, PaintEventArgs)' could contain the following variables 'this.id_deviceID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.GCSViews.ConfigurationView">
       <Types>
        <Type Name="ConfigHWPX4Flow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="flow" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews\ConfigurationView" File="ConfigHWPX4Flow.Designer.cs" Line="15">'ConfigHWPX4Flow' contains field 'ConfigHWPX4Flow.flow' that is of IDisposable type: 'OpticalFlow'. Change the Dispose method on 'ConfigHWPX4Flow' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="maintenance_RegisTool" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button_save_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GCSViews\ConfigurationView" File="maintenance_RegisTool.cs" Line="167">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'maintenance_RegisTool.button_save_Click(object, EventArgs)' could contain the following variables 'this.textBox_num.Text', 'this.textBox_toolName.Text', 'this.textBox_position.Text', 'this.dateTimePicker_reg.Text', 'this.dateTimePicker_start.Text', 'this.dateTimePicker_exp.Text', 'this.textBox_venName.Text', 'this.textBox_venAdd.Text', 'this.textBox_venTel.Text', 'this.textBox_respon.Text', 'this.pictureBox.Image', 'this.comboBox_alarm.Text'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.GCSViews.PrintableReport">
       <Types>
        <Type Name="EntitiesOfPreFlightSchedule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'EntitiesOfPreFlightSchedule' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'DbContext'</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.GeoRef">
       <Types>
        <Type Name="Georefimage" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#doworkGPSOFFSET(System.String,System.String,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\GeoRef" File="georefimage.cs" Line="1056">'Georefimage.doworkGPSOFFSET(string, string, float)' locks on a reference of type 'Georefimage'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.HIL">
       <Types>
        <Type Name="Hil" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Status" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vector3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\HIL" File="Vector3.cs" Line="71">'Vector3.this.get(int)' creates an exception of type 'Exception', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="XPlane" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'XPlane' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XplanesSEND" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\HIL" File="XPlane.cs" Line="434">'XPlane' contains field 'XPlane.XplanesSEND' that is of IDisposable type: 'UdpClient'. Change the Dispose method on 'XPlane' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\HIL" File="XPlane.cs" Line="434">Modify 'XPlane.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Log">
       <Types>
        <Type Name="BinaryLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'BinaryLog' because it creates members of the following IDisposable types: 'ProgressReporterDialogue'. If 'BinaryLog' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CollectionBuffer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'CollectionBuffer' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="CollectionBuffer.cs" Line="276">Modify 'CollectionBuffer.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogBrowse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="logdata" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="LogBrowse.designer.cs" Line="17">'LogBrowse' contains field 'LogBrowse.logdata' that is of IDisposable type: 'CollectionBuffer'. Change the Dispose method on 'LogBrowse' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="mapoverlay" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="LogBrowse.designer.cs" Line="17">'LogBrowse' contains field 'LogBrowse.mapoverlay' that is of IDisposable type: 'GMapOverlay'. Change the Dispose method on 'LogBrowse' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="markeroverlay" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="LogBrowse.designer.cs" Line="17">'LogBrowse' contains field 'LogBrowse.markeroverlay' that is of IDisposable type: 'GMapOverlay'. Change the Dispose method on 'LogBrowse' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogDownload" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="sw" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="LogDownload.Designer.cs" Line="15">'LogDownload' contains field 'LogDownload.sw' that is of IDisposable type: 'StreamWriter'. Change the Dispose method on 'LogDownload' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogIndex+NonSelectableRenderer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'LogIndex.NonSelectableRenderer' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'BaseRenderer', 'AbstractRenderer'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="LogMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMap(GMap.NET.RectLatLng)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="LogMap.cs" Line="268">Object 'tile' can be disposed more than once in method 'LogMap.GetMap(RectLatLng)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 268</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MatLab+DoubleList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'MatLab.DoubleList' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="MatLab.cs" Line="503">Modify 'MatLab.DoubleList.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Log" File="MatLab.cs" Line="498">Modify 'MatLab.DoubleList.~DoubleList()' so that it calls Dispose(false) and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Maps">
       <Types>
        <Type Name="MyImageCache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GMap.NET.PureImageCache.DeleteOlderThan(System.DateTime,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Maps" File="MyImageCache.cs" Line="135">Make 'MyImageCache' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'PureImageCache.DeleteOlderThan(DateTime, int?)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GMap.NET.PureImageCache.GetImageFromCache(System.Int32,GMap.NET.GPoint,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Maps" File="MyImageCache.cs" Line="97">Make 'MyImageCache' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'PureImageCache.GetImageFromCache(int, GPoint, int)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GMap.NET.PureImageCache.PutImageToCache(System.Byte[],System.Int32,GMap.NET.GPoint,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Maps" File="MyImageCache.cs" Line="68">Make 'MyImageCache' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'PureImageCache.PutImageToCache(byte[], int, GPoint, int)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Mavlink">
       <Types>
        <Type Name="MAVAuthKeys" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Load()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVAuthKeys.cs" Line="85">Object 'fs' can be disposed more than once in method 'MAVAuthKeys.Load()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 85</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVAuthKeys.cs" Line="66">Object 'fs' can be disposed more than once in method 'MAVAuthKeys.Save()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 66</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAVList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'MAVList' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Mavlink" File="MAVList.cs" Line="135">Modify 'MAVList.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.NoFly">
       <Types>
        <Type Name="NoFly" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadNoFly(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\NoFly" File="NoFly.cs" Line="74">Object 'File.OpenRead(file)' can be disposed more than once in method 'NoFly.LoadNoFly(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 74</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\NoFly" File="NoFly.cs" Line="74">Object 'sr' can be disposed more than once in method 'NoFly.LoadNoFly(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 74</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Plugin">
       <Types>
        <Type Name="PluginHost" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeviceChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'MainV2.WMDeviceChangeEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MainV2.WMDeviceChangeEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Radio">
       <Types>
        <Type Name="XModem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogEvent" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.LogEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.LogEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProgressEvent" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Swarm">
       <Types>
        <Type Name="Grid" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateOffsets" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Grid.UpdateOffsetsEvent' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Grid.UpdateOffsetsEvent' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'Grid.UpdateOffsetsEvent'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Utilities">
       <Types>
        <Type Name="AP_GPS_GSOF" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#process_message()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="AP_GPS_GSOF.cs" Line="456">Method 'AP_GPS_GSOF.process_message()' calls 'Console.WriteLine(string, params object[])' and does not provide a format item for argument "7, 8, 9". The provided format string is: '"{0} {1} {2} {3} {4} {5} "'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BoardDetect" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DetectBoard(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="BoardDetect.cs" Line="271">Object 'serialPort' can be disposed more than once in method 'BoardDetect.DetectBoard(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 271, 279, 303, 351</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dxf" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#newLine" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'dxf.LineEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'dxf.LineEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#newLwPolyline" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'dxf.LwPolylineEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'dxf.LwPolylineEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#newMLine" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'dxf.MLineEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'dxf.MLineEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#newPolyLine" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'dxf.PolyLineEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'dxf.PolyLineEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Firmware" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#update(System.String,MissionPlanner.Utilities.Firmware+software,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Firmware.cs" Line="636">Object 'dataStream' can be disposed more than once in method 'Firmware.update(string, Firmware.software, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 636</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Firmware.cs" Line="634">Object 'fs' can be disposed more than once in method 'Firmware.update(string, Firmware.software, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 634</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Firmware.cs" Line="638">Object 'response' can be disposed more than once in method 'Firmware.update(string, Firmware.software, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 638</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UploadParrot(System.String,MissionPlanner.Utilities.BoardDetect+boards)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Firmware.cs" Line="1211">Object 'stream' can be disposed more than once in method 'Firmware.UploadParrot(string, BoardDetect.boards)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1211</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Progress" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GMapMarkerAirport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerAirport'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerAirport with the following signature: 'protected GMapMarkerAirport(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerOverlapCount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerOverlapCount'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerOverlapCount with the following signature: 'protected GMapMarkerOverlapCount(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerPhoto" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerPhoto'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerPhoto with the following signature: 'protected GMapMarkerPhoto(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(MAVLink+mavlink_camera_feedback_t,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="GMapMarkerPhoto.cs" Line="31">'GMapMarkerPhoto.GMapMarkerPhoto(MAVLink.mavlink_camera_feedback_t, bool)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;GMapMarkerPhoto..ctor(MAVLink+mavlink_camera_feedback_t, Boolean)&#xD;&#xA;GMapMarker.set_Size(Size):Void&#xD;&#xA;GMapMarker.get_Position():PointLatLng</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GMapMarkerPOI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerPOI with the following signature: 'protected GMapMarkerPOI(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GMapMarkerRallyPt" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'GMapMarkerRallyPt'.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="CreateMagicConstructor" Certainty="95" Level="Error">Add a constructor to GMapMarkerRallyPt with the following signature: 'protected GMapMarkerRallyPt(SerializationInfo info, StreamingContext context)'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GStreamer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#readRTPData(System.IO.Stream,System.IO.MemoryStream)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="GStreamer.cs" Line="479">'GStreamer.readRTPData(Stream, MemoryStream)' locks on a reference of type 'Bitmap'. Replace this with a lock against an object with strong-identity.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="httpserver" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#DoAcceptTcpClientCallback(System.IAsyncResult)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="httpserver.cs" Line="633">Object 'memstream' can be disposed more than once in method 'httpserver.DoAcceptTcpClientCallback(IAsyncResult)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 633</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="httpserver.cs" Line="927">Object 'stream' can be disposed more than once in method 'httpserver.DoAcceptTcpClientCallback(IAsyncResult)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 927</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OpticalFlow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'OpticalFlow' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="OpticalFlow.cs" Line="126">Modify 'OpticalFlow.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ParameterMetaDataParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetParameterInformation(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="ParameterMetaDataParser.cs" Line="111">Object 'objXmlTextWriter' can be disposed more than once in method 'ParameterMetaDataParser.GetParameterInformation(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 111</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDataFromAddress(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="ParameterMetaDataParser.cs" Line="391">Object 'dataStream' can be disposed more than once in method 'ParameterMetaDataParser.ReadDataFromAddress(string, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 391</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="POI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadFile(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="POI.cs" Line="203">Object 'file' can be disposed more than once in method 'POI.LoadFile(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 203</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Proximity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'Proximity' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="temp" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Proximity.cs" Line="200">'Proximity' contains field 'Proximity.temp' that is of IDisposable type: 'Form'. Change the Dispose method on 'Proximity' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Proximity.cs" Line="200">Modify 'Proximity.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Proximity.cs" Line="161">Modify 'Proximity.~Proximity()' so that it calls Dispose(false) and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Save()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Settings.cs" Line="337">Object 'xmlwriter' can be disposed more than once in method 'Settings.Save()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 337</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Speech" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'Speech' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Speech.cs" Line="145">Modify 'Speech.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Update" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CheckForUpdate(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Update.cs" Line="148">Object 'fs' can be disposed more than once in method 'Update.CheckForUpdate(bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 148</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckMD5(MissionPlanner.Controls.ProgressReporterDialogue,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Update.cs" Line="256">Object 'dataStream' can be disposed more than once in method 'Update.CheckMD5(ProgressReporterDialogue, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 256</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#updateCheck(MissionPlanner.Controls.ProgressReporterDialogue,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Update.cs" Line="586">Object 'dataStream' can be disposed more than once in method 'Update.updateCheck(ProgressReporterDialogue, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 586</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities" File="Update.cs" Line="666">Object 'fs' can be disposed more than once in method 'Update.updateCheck(ProgressReporterDialogue, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 666</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="vlcrender" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalError">Implement IDisposable on 'vlcrender'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Utilities.AltitudeAngel">
       <Types>
        <Type Name="AltitudeAngel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'AltitudeAngel' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities\AltitudeAngel" File="AltitudeAngel.cs" Line="28">Modify 'AltitudeAngel.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapAdapter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="_disposer" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Utilities\AltitudeAngel" File="MapAdapter.cs" Line="266">'MapAdapter' contains field 'MapAdapter._disposer' that is of IDisposable type: 'CompositeDisposable'. Change the Dispose method on 'MapAdapter' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OverlayAdapter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'OverlayAdapter' because it creates members of the following IDisposable types: 'WindowsFormsSynchronizationContext'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Warnings">
       <Types>
        <Type Name="CustomWarning" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_GetValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Warnings" File="CustomWarning.cs" Line="139">'CustomWarning.GetValue.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Warnings" File="CustomWarning.cs" Line="141">'CustomWarning.GetValue.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MissionPlanner.Wizard">
       <Types>
        <Type Name="Wizard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="wiz_main" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4\Wizard" File="Wizard.Designer.cs" Line="17">'Wizard' contains field 'Wizard.wiz_main' that is of IDisposable type: 'MainSwitcher'. Change the Dispose method on 'Wizard' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="resedit">
       <Types>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\User\Source\Repos\Drone-s-Flight-Planner4" File="ResEdit.cs" Line="214">Object 'writer' can be disposed more than once in method 'Form1.button2_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 214</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="uploader">
       <Types>
        <Type Name="IHex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'IHex' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'SortedList&lt;uint, byte[]&gt;'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LogEvent" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.LogEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.LogEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProgressEvent" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Uploader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogEvent" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.LogEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.LogEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProgressEvent" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-07-27 05:44:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Sikradio.ProgressEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Sikradio.ProgressEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405">
   <Name>COM visible type base types should be COM visible</Name>
   <Description>COM visible types should have an object hierarchy that is uniformly COM visible.</Description>
   <Resolution Name="Default">{0} is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182202.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Resolution Name="TooMany">Remove all but the first two parameters of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 7526</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002">
   <Name>Do not lock on objects with weak identity</Name>
   <Description>Don't take locks on objects that may bleed across AppDomains or that don't have a strong identity.</Description>
   <Resolution Name="Default">{0} locks on a reference of type {1}. Replace this with a lock against an object with strong-identity.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182290.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="reliabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="FinalizeImplementation">Modify {0} so that it calls Dispose(false) and then returns.</Resolution>
   <Resolution Name="FinalizeOverride">Remove the finalizer from type {0}, override Dispose(bool disposing), and put the finalization logic in the code path where 'disposing' is false.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229">
   <Name>Implement serialization constructors</Name>
   <Description>The constructor signature accepts the same arguments as ISerializable.GetObjectData, namely, a SerializationInfo instance and a StreamingContext instance. The constructor should be protected for non-sealed classes and private for sealed classes. Failure to implement a serialization constructor will cause deserialization to fail, and throw a SerializationException.</Description>
   <Resolution Name="CreateMagicConstructor">Add a constructor to {0} with the following signature: 'protected {0}(SerializationInfo info, StreamingContext context)'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182343.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241">
   <Name>Provide correct arguments to formatting methods</Name>
   <Description>Provide the correct number of arguments to String.Format calls.</Description>
   <Resolution Name="MissingFormatItem">Method {0} calls {1} and does not provide a format item for argument {2}. The provided format string is: '{3}'</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182361.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Resolution Name="NonBreaking">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049">
   <Name>Types that own native resources should be disposable</Name>
   <Description>Types that allocate unmanaged resources should implement IDisposable to allow callers to release those resources on demand. Failure to implement IDisposable can result in unmanaged resources being unavailable or underutilized.</Description>
   <Resolution Name="Default">Implement IDisposable on {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182173.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
